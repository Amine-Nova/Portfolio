{"ast":null,"code":"var _jsxFileName = \"/Users/abenmous/Desktop/Mark1/portfolio/src/components/TextShine/textshine.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { CanvasTexture, Clock, Color, LinearFilter, LinearMipmapLinearFilter, Mesh, OrthographicCamera, PlaneGeometry, Scene, ShaderMaterial, Vector2, Vector3, WebGLRenderer, WebGLRenderTarget } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hexToRgb = hex => {\n  let h = hex.replace('#', '');\n  if (h.length === 3) h = h.split('').map(c => c + c).join('');\n  const n = parseInt(h, 16);\n  return [n >> 16 & 255, n >> 8 & 255, n & 255];\n};\nconst loadFont = async fam => {\n  if ('fonts' in document) await document.fonts.load(`64px \"${fam}\"`);\n};\nconst BASE_VERT = `\nvarying vec2 v_uv;\nvoid main(){gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);v_uv=uv;}`;\nconst SIMPLEX = `\nvec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}\nvec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}\nvec4 permute(vec4 x){return mod289(((x*34.)+1.)*x);}\nfloat snoise3(vec3 v){\n  const vec2 C=vec2(1./6.,1./3.);\n  const vec4 D=vec4(0.,.5,1.,2.);\n  vec3 i=floor(v+dot(v,C.yyy));\n  vec3 x0=v-i+dot(i,C.xxx);\n  vec3 g=step(x0.yzx,x0.xyz);\n  vec3 l=1.-g;\n  vec3 i1=min(g.xyz,l.zxy);\n  vec3 i2=max(g.xyz,l.zxy);\n  vec3 x1=x0-i1+C.xxx;\n  vec3 x2=x0-i2+C.yyy;\n  vec3 x3=x0-D.yyy;\n  i=mod289(i);\n  vec4 p=permute(permute(permute(i.z+vec4(0.,i1.z,i2.z,1.))+i.y+vec4(0.,i1.y,i2.y,1.))+i.x+vec4(0.,i1.x,i2.x,1.));\n  float n_=1./7.; vec3 ns=n_*D.wyz-D.xzx;\n  vec4 j=p-49.*floor(p*ns.z*ns.z);\n  vec4 x_=floor(j*ns.z);\n  vec4 y_=floor(j-7.*x_);\n  vec4 x=x_*ns.x+ns.yyyy;\n  vec4 y=y_*ns.x+ns.yyyy;\n  vec4 h=1.-abs(x)-abs(y);\n  vec4 b0=vec4(x.xy,y.xy);\n  vec4 b1=vec4(x.zw,y.zw);\n  vec4 s0=floor(b0)*2.+1.;\n  vec4 s1=floor(b1)*2.+1.;\n  vec4 sh=-step(h,vec4(0.));\n  vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n  vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n  vec3 p0=vec3(a0.xy,h.x);\n  vec3 p1=vec3(a0.zw,h.y);\n  vec3 p2=vec3(a1.xy,h.z);\n  vec3 p3=vec3(a1.zw,h.w);\n  vec4 norm=inversesqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n  p0*=norm.x; p1*=norm.y; p2*=norm.z; p3*=norm.w;\n  vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n  m*=m;\n  return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));\n}`;\nconst PERSIST_FRAG = `\nuniform sampler2D sampler;\nuniform float time;\nuniform vec2 mousePos;\nuniform float noiseFactor,noiseScale,rgbPersistFactor,alphaPersistFactor;\nvarying vec2 v_uv;\n${SIMPLEX}\nvoid main(){\n  float a=snoise3(vec3(v_uv*noiseFactor,time*.1))*noiseScale;\n  float b=snoise3(vec3(v_uv*noiseFactor,time*.1+100.))*noiseScale;\n  vec4 t=texture2D(sampler,v_uv+vec2(a,b)+mousePos*.005);\n  gl_FragColor=vec4(t.xyz*rgbPersistFactor,alphaPersistFactor);\n}`;\nconst TEXT_FRAG = `\nuniform sampler2D sampler;uniform vec3 color;varying vec2 v_uv;\nvoid main(){\n  vec4 t=texture2D(sampler,v_uv);\n  float alpha=smoothstep(0.1,0.9,t.a);\n  if(alpha<0.01)discard;\n  gl_FragColor=vec4(color,alpha);\n}`;\nconst TextTrail = ({\n  text = 'Trail',\n  fontFamily = 'Figtree',\n  fontWeight = '900',\n  noiseFactor = 1,\n  noiseScale = 0.0005,\n  rgbPersistFactor = 0.98,\n  alphaPersistFactor = 0.95,\n  animateColor = false,\n  startColor = '#ffffff',\n  textColor = '#ffffff',\n  backgroundColor = 0x271e37,\n  colorCycleInterval = 3000,\n  supersample = 2\n}) => {\n  _s();\n  const ref = useRef(null);\n  const persistColor = useRef(hexToRgb(textColor || startColor).map(c => c / 255));\n  const targetColor = useRef([...persistColor.current]);\n  useEffect(() => {\n    if (!ref.current) return;\n    const size = () => ({\n      w: ref.current.clientWidth,\n      h: ref.current.clientHeight\n    });\n    let {\n      w,\n      h\n    } = size();\n    const renderer = new WebGLRenderer({\n      antialias: true\n    });\n    renderer.setClearColor(new Color(backgroundColor), 1);\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setSize(w, h);\n    ref.current.appendChild(renderer.domElement);\n    const scene = new Scene();\n    const fluidScene = new Scene();\n    const clock = new Clock();\n    const cam = new OrthographicCamera(-w / 2, w / 2, h / 2, -h / 2, 0.1, 10);\n    cam.position.z = 1;\n    let rt0 = new WebGLRenderTarget(w, h);\n    let rt1 = rt0.clone();\n    const quadMat = new ShaderMaterial({\n      uniforms: {\n        sampler: {\n          value: null\n        },\n        time: {\n          value: 0\n        },\n        mousePos: {\n          value: new Vector2(-1, 1)\n        },\n        noiseFactor: {\n          value: noiseFactor\n        },\n        noiseScale: {\n          value: noiseScale\n        },\n        rgbPersistFactor: {\n          value: rgbPersistFactor\n        },\n        alphaPersistFactor: {\n          value: alphaPersistFactor\n        }\n      },\n      vertexShader: BASE_VERT,\n      fragmentShader: PERSIST_FRAG,\n      transparent: true\n    });\n    const quad = new Mesh(new PlaneGeometry(w, h), quadMat);\n    fluidScene.add(quad);\n    const labelMat = new ShaderMaterial({\n      uniforms: {\n        sampler: {\n          value: null\n        },\n        color: {\n          value: new Vector3(...persistColor.current)\n        }\n      },\n      vertexShader: BASE_VERT,\n      fragmentShader: TEXT_FRAG,\n      transparent: true\n    });\n    const label = new Mesh(new PlaneGeometry(Math.min(w, h), Math.min(w, h)), labelMat);\n    scene.add(label);\n    const texCanvas = document.createElement('canvas');\n    const ctx = texCanvas.getContext('2d', {\n      alpha: true,\n      colorSpace: 'srgb'\n    });\n    const drawText = () => {\n      const max = Math.min(renderer.capabilities.maxTextureSize, 4096);\n      const pixelRatio = (window.devicePixelRatio || 1) * supersample;\n      const canvasSize = max * pixelRatio;\n      texCanvas.width = canvasSize;\n      texCanvas.height = canvasSize;\n      texCanvas.style.width = `${max}px`;\n      texCanvas.style.height = `${max}px`;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(pixelRatio, pixelRatio);\n      ctx.clearRect(0, 0, max, max);\n      ctx.imageSmoothingEnabled = true;\n      ctx.imageSmoothingQuality = 'high';\n      ctx.shadowColor = 'rgba(255,255,255,0.3)';\n      ctx.shadowBlur = 2;\n      ctx.fillStyle = '#fff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      const refSize = 250;\n      ctx.font = `${fontWeight} ${refSize}px ${fontFamily}`;\n      const width = ctx.measureText(text).width;\n      ctx.font = `${fontWeight} ${refSize * max / width}px ${fontFamily}`;\n      const cx = max / 2,\n        cy = max / 2;\n      const offs = [[0, 0], [0.1, 0], [-0.1, 0], [0, 0.1], [0, -0.1], [0.1, 0.1], [-0.1, -0.1], [0.1, -0.1], [-0.1, 0.1]];\n      ctx.globalAlpha = 1 / offs.length;\n      offs.forEach(([dx, dy]) => ctx.fillText(text, cx + dx, cy + dy));\n      ctx.globalAlpha = 1;\n      const tex = new CanvasTexture(texCanvas);\n      tex.generateMipmaps = true;\n      tex.minFilter = LinearMipmapLinearFilter;\n      tex.magFilter = LinearFilter;\n      labelMat.uniforms.sampler.value = tex;\n    };\n    loadFont(fontFamily).finally(drawText);\n    const mouse = [0, 0],\n      target = [0, 0];\n    const onMove = e => {\n      const r = ref.current.getBoundingClientRect();\n      target[0] = (e.clientX - r.left) / r.width * 2 - 1;\n      target[1] = (r.top + r.height - e.clientY) / r.height * 2 - 1;\n    };\n    ref.current.addEventListener('pointermove', onMove);\n    const ro = new ResizeObserver(() => {\n      ({\n        w,\n        h\n      } = size());\n      renderer.setSize(w, h);\n      cam.left = -w / 2;\n      cam.right = w / 2;\n      cam.top = h / 2;\n      cam.bottom = -h / 2;\n      cam.updateProjectionMatrix();\n      quad.geometry.dispose();\n      quad.geometry = new PlaneGeometry(w, h);\n      rt0.setSize(w, h);\n      rt1.setSize(w, h);\n      label.geometry.dispose();\n      label.geometry = new PlaneGeometry(Math.min(w, h), Math.min(w, h));\n    });\n    ro.observe(ref.current);\n    const timer = setInterval(() => {\n      if (!textColor) {\n        targetColor.current = [Math.random(), Math.random(), Math.random()];\n      }\n    }, colorCycleInterval);\n    renderer.setAnimationLoop(() => {\n      const dt = clock.getDelta();\n      if (animateColor && !textColor) {\n        for (let i = 0; i < 3; i++) persistColor.current[i] += (targetColor.current[i] - persistColor.current[i]) * dt;\n      }\n      const speed = dt * 5;\n      mouse[0] += (target[0] - mouse[0]) * speed;\n      mouse[1] += (target[1] - mouse[1]) * speed;\n      quadMat.uniforms.mousePos.value.set(mouse[0], mouse[1]);\n      quadMat.uniforms.sampler.value = rt1.texture;\n      quadMat.uniforms.time.value = clock.getElapsedTime();\n      labelMat.uniforms.color.value.set(...persistColor.current);\n      renderer.autoClearColor = false;\n      renderer.setRenderTarget(rt0);\n      renderer.clearColor();\n      renderer.render(fluidScene, cam);\n      renderer.render(scene, cam);\n      renderer.setRenderTarget(null);\n      renderer.render(fluidScene, cam);\n      renderer.render(scene, cam);\n      [rt0, rt1] = [rt1, rt0];\n    });\n    return () => {\n      var _ref$current, _ref$current2;\n      renderer.setAnimationLoop(null);\n      clearInterval(timer);\n      (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.removeEventListener('pointermove', onMove);\n      ro.disconnect();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : _ref$current2.removeChild(renderer.domElement);\n      renderer.dispose();\n      rt0.dispose();\n      rt1.dispose();\n      quadMat.dispose();\n      quad.geometry.dispose();\n      labelMat.dispose();\n      label.geometry.dispose();\n    };\n  }, [text, fontFamily, fontWeight, noiseFactor, noiseScale, rgbPersistFactor, alphaPersistFactor, animateColor, startColor, textColor, backgroundColor, colorCycleInterval, supersample]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"w-full h-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 10\n  }, this);\n};\n_s(TextTrail, \"0zAvX0XM7AGmm4CggFd/wI8FEZ0=\");\n_c = TextTrail;\nexport default TextTrail;\nvar _c;\n$RefreshReg$(_c, \"TextTrail\");","map":{"version":3,"names":["useEffect","useRef","CanvasTexture","Clock","Color","LinearFilter","LinearMipmapLinearFilter","Mesh","OrthographicCamera","PlaneGeometry","Scene","ShaderMaterial","Vector2","Vector3","WebGLRenderer","WebGLRenderTarget","jsxDEV","_jsxDEV","hexToRgb","hex","h","replace","length","split","map","c","join","n","parseInt","loadFont","fam","document","fonts","load","BASE_VERT","SIMPLEX","PERSIST_FRAG","TEXT_FRAG","TextTrail","text","fontFamily","fontWeight","noiseFactor","noiseScale","rgbPersistFactor","alphaPersistFactor","animateColor","startColor","textColor","backgroundColor","colorCycleInterval","supersample","_s","ref","persistColor","targetColor","current","size","w","clientWidth","clientHeight","renderer","antialias","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","scene","fluidScene","clock","cam","position","z","rt0","rt1","clone","quadMat","uniforms","sampler","value","time","mousePos","vertexShader","fragmentShader","transparent","quad","add","labelMat","color","label","Math","min","texCanvas","createElement","ctx","getContext","alpha","colorSpace","drawText","max","capabilities","maxTextureSize","pixelRatio","canvasSize","width","height","style","setTransform","scale","clearRect","imageSmoothingEnabled","imageSmoothingQuality","shadowColor","shadowBlur","fillStyle","textAlign","textBaseline","refSize","font","measureText","cx","cy","offs","globalAlpha","forEach","dx","dy","fillText","tex","generateMipmaps","minFilter","magFilter","finally","mouse","target","onMove","e","r","getBoundingClientRect","clientX","left","top","clientY","addEventListener","ro","ResizeObserver","right","bottom","updateProjectionMatrix","geometry","dispose","observe","timer","setInterval","random","setAnimationLoop","dt","getDelta","i","speed","set","texture","getElapsedTime","autoClearColor","setRenderTarget","clearColor","render","_ref$current","_ref$current2","clearInterval","removeEventListener","disconnect","removeChild","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abenmous/Desktop/Mark1/portfolio/src/components/TextShine/textshine.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport {\n  CanvasTexture,\n  Clock,\n  Color,\n  LinearFilter,\n  LinearMipmapLinearFilter,\n  Mesh,\n  OrthographicCamera,\n  PlaneGeometry,\n  Scene,\n  ShaderMaterial,\n  Vector2,\n  Vector3,\n  WebGLRenderer,\n  WebGLRenderTarget\n} from 'three';\n\nconst hexToRgb = hex => {\n  let h = hex.replace('#', '');\n  if (h.length === 3)\n    h = h\n      .split('')\n      .map(c => c + c)\n      .join('');\n  const n = parseInt(h, 16);\n  return [(n >> 16) & 255, (n >> 8) & 255, n & 255];\n};\nconst loadFont = async fam => {\n  if ('fonts' in document) await document.fonts.load(`64px \"${fam}\"`);\n};\n\nconst BASE_VERT = `\nvarying vec2 v_uv;\nvoid main(){gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);v_uv=uv;}`;\n\nconst SIMPLEX = `\nvec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}\nvec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}\nvec4 permute(vec4 x){return mod289(((x*34.)+1.)*x);}\nfloat snoise3(vec3 v){\n  const vec2 C=vec2(1./6.,1./3.);\n  const vec4 D=vec4(0.,.5,1.,2.);\n  vec3 i=floor(v+dot(v,C.yyy));\n  vec3 x0=v-i+dot(i,C.xxx);\n  vec3 g=step(x0.yzx,x0.xyz);\n  vec3 l=1.-g;\n  vec3 i1=min(g.xyz,l.zxy);\n  vec3 i2=max(g.xyz,l.zxy);\n  vec3 x1=x0-i1+C.xxx;\n  vec3 x2=x0-i2+C.yyy;\n  vec3 x3=x0-D.yyy;\n  i=mod289(i);\n  vec4 p=permute(permute(permute(i.z+vec4(0.,i1.z,i2.z,1.))+i.y+vec4(0.,i1.y,i2.y,1.))+i.x+vec4(0.,i1.x,i2.x,1.));\n  float n_=1./7.; vec3 ns=n_*D.wyz-D.xzx;\n  vec4 j=p-49.*floor(p*ns.z*ns.z);\n  vec4 x_=floor(j*ns.z);\n  vec4 y_=floor(j-7.*x_);\n  vec4 x=x_*ns.x+ns.yyyy;\n  vec4 y=y_*ns.x+ns.yyyy;\n  vec4 h=1.-abs(x)-abs(y);\n  vec4 b0=vec4(x.xy,y.xy);\n  vec4 b1=vec4(x.zw,y.zw);\n  vec4 s0=floor(b0)*2.+1.;\n  vec4 s1=floor(b1)*2.+1.;\n  vec4 sh=-step(h,vec4(0.));\n  vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n  vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n  vec3 p0=vec3(a0.xy,h.x);\n  vec3 p1=vec3(a0.zw,h.y);\n  vec3 p2=vec3(a1.xy,h.z);\n  vec3 p3=vec3(a1.zw,h.w);\n  vec4 norm=inversesqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n  p0*=norm.x; p1*=norm.y; p2*=norm.z; p3*=norm.w;\n  vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n  m*=m;\n  return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));\n}`;\n\nconst PERSIST_FRAG = `\nuniform sampler2D sampler;\nuniform float time;\nuniform vec2 mousePos;\nuniform float noiseFactor,noiseScale,rgbPersistFactor,alphaPersistFactor;\nvarying vec2 v_uv;\n${SIMPLEX}\nvoid main(){\n  float a=snoise3(vec3(v_uv*noiseFactor,time*.1))*noiseScale;\n  float b=snoise3(vec3(v_uv*noiseFactor,time*.1+100.))*noiseScale;\n  vec4 t=texture2D(sampler,v_uv+vec2(a,b)+mousePos*.005);\n  gl_FragColor=vec4(t.xyz*rgbPersistFactor,alphaPersistFactor);\n}`;\n\nconst TEXT_FRAG = `\nuniform sampler2D sampler;uniform vec3 color;varying vec2 v_uv;\nvoid main(){\n  vec4 t=texture2D(sampler,v_uv);\n  float alpha=smoothstep(0.1,0.9,t.a);\n  if(alpha<0.01)discard;\n  gl_FragColor=vec4(color,alpha);\n}`;\n\nconst TextTrail = ({\n  text = 'Trail',\n  fontFamily = 'Figtree',\n  fontWeight = '900',\n  noiseFactor = 1,\n  noiseScale = 0.0005,\n  rgbPersistFactor = 0.98,\n  alphaPersistFactor = 0.95,\n  animateColor = false,\n  startColor = '#ffffff',\n  textColor = '#ffffff',\n  backgroundColor = 0x271e37,\n  colorCycleInterval = 3000,\n  supersample = 2\n}) => {\n  const ref = useRef(null);\n\n  const persistColor = useRef(hexToRgb(textColor || startColor).map(c => c / 255));\n  const targetColor = useRef([...persistColor.current]);\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const size = () => ({\n      w: ref.current.clientWidth,\n      h: ref.current.clientHeight\n    });\n    let { w, h } = size();\n\n    const renderer = new WebGLRenderer({ antialias: true });\n    renderer.setClearColor(new Color(backgroundColor), 1);\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setSize(w, h);\n    ref.current.appendChild(renderer.domElement);\n\n    const scene = new Scene();\n    const fluidScene = new Scene();\n    const clock = new Clock();\n    const cam = new OrthographicCamera(-w / 2, w / 2, h / 2, -h / 2, 0.1, 10);\n    cam.position.z = 1;\n\n    let rt0 = new WebGLRenderTarget(w, h);\n    let rt1 = rt0.clone();\n\n    const quadMat = new ShaderMaterial({\n      uniforms: {\n        sampler: { value: null },\n        time: { value: 0 },\n        mousePos: { value: new Vector2(-1, 1) },\n        noiseFactor: { value: noiseFactor },\n        noiseScale: { value: noiseScale },\n        rgbPersistFactor: { value: rgbPersistFactor },\n        alphaPersistFactor: { value: alphaPersistFactor }\n      },\n      vertexShader: BASE_VERT,\n      fragmentShader: PERSIST_FRAG,\n      transparent: true\n    });\n    const quad = new Mesh(new PlaneGeometry(w, h), quadMat);\n    fluidScene.add(quad);\n\n    const labelMat = new ShaderMaterial({\n      uniforms: {\n        sampler: { value: null },\n        color: { value: new Vector3(...persistColor.current) }\n      },\n      vertexShader: BASE_VERT,\n      fragmentShader: TEXT_FRAG,\n      transparent: true\n    });\n    const label = new Mesh(new PlaneGeometry(Math.min(w, h), Math.min(w, h)), labelMat);\n    scene.add(label);\n\n    const texCanvas = document.createElement('canvas');\n    const ctx = texCanvas.getContext('2d', {\n      alpha: true,\n      colorSpace: 'srgb'\n    });\n    const drawText = () => {\n      const max = Math.min(renderer.capabilities.maxTextureSize, 4096);\n      const pixelRatio = (window.devicePixelRatio || 1) * supersample;\n      const canvasSize = max * pixelRatio;\n      texCanvas.width = canvasSize;\n      texCanvas.height = canvasSize;\n      texCanvas.style.width = `${max}px`;\n      texCanvas.style.height = `${max}px`;\n\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(pixelRatio, pixelRatio);\n      ctx.clearRect(0, 0, max, max);\n      ctx.imageSmoothingEnabled = true;\n      ctx.imageSmoothingQuality = 'high';\n      ctx.shadowColor = 'rgba(255,255,255,0.3)';\n      ctx.shadowBlur = 2;\n      ctx.fillStyle = '#fff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n\n      const refSize = 250;\n      ctx.font = `${fontWeight} ${refSize}px ${fontFamily}`;\n      const width = ctx.measureText(text).width;\n      ctx.font = `${fontWeight} ${(refSize * max) / width}px ${fontFamily}`;\n\n      const cx = max / 2,\n        cy = max / 2;\n      const offs = [\n        [0, 0],\n        [0.1, 0],\n        [-0.1, 0],\n        [0, 0.1],\n        [0, -0.1],\n        [0.1, 0.1],\n        [-0.1, -0.1],\n        [0.1, -0.1],\n        [-0.1, 0.1]\n      ];\n      ctx.globalAlpha = 1 / offs.length;\n      offs.forEach(([dx, dy]) => ctx.fillText(text, cx + dx, cy + dy));\n      ctx.globalAlpha = 1;\n\n      const tex = new CanvasTexture(texCanvas);\n      tex.generateMipmaps = true;\n      tex.minFilter = LinearMipmapLinearFilter;\n      tex.magFilter = LinearFilter;\n      labelMat.uniforms.sampler.value = tex;\n    };\n    loadFont(fontFamily).finally(drawText);\n\n    const mouse = [0, 0],\n      target = [0, 0];\n    const onMove = e => {\n      const r = ref.current.getBoundingClientRect();\n      target[0] = ((e.clientX - r.left) / r.width) * 2 - 1;\n      target[1] = ((r.top + r.height - e.clientY) / r.height) * 2 - 1;\n    };\n    ref.current.addEventListener('pointermove', onMove);\n\n    const ro = new ResizeObserver(() => {\n      ({ w, h } = size());\n      renderer.setSize(w, h);\n      cam.left = -w / 2;\n      cam.right = w / 2;\n      cam.top = h / 2;\n      cam.bottom = -h / 2;\n      cam.updateProjectionMatrix();\n      quad.geometry.dispose();\n      quad.geometry = new PlaneGeometry(w, h);\n      rt0.setSize(w, h);\n      rt1.setSize(w, h);\n      label.geometry.dispose();\n      label.geometry = new PlaneGeometry(Math.min(w, h), Math.min(w, h));\n    });\n    ro.observe(ref.current);\n\n    const timer = setInterval(() => {\n      if (!textColor) {\n        targetColor.current = [Math.random(), Math.random(), Math.random()];\n      }\n    }, colorCycleInterval);\n\n    renderer.setAnimationLoop(() => {\n      const dt = clock.getDelta();\n      if (animateColor && !textColor) {\n        for (let i = 0; i < 3; i++) persistColor.current[i] += (targetColor.current[i] - persistColor.current[i]) * dt;\n      }\n      const speed = dt * 5;\n      mouse[0] += (target[0] - mouse[0]) * speed;\n      mouse[1] += (target[1] - mouse[1]) * speed;\n\n      quadMat.uniforms.mousePos.value.set(mouse[0], mouse[1]);\n      quadMat.uniforms.sampler.value = rt1.texture;\n      quadMat.uniforms.time.value = clock.getElapsedTime();\n      labelMat.uniforms.color.value.set(...persistColor.current);\n\n      renderer.autoClearColor = false;\n      renderer.setRenderTarget(rt0);\n      renderer.clearColor();\n      renderer.render(fluidScene, cam);\n      renderer.render(scene, cam);\n      renderer.setRenderTarget(null);\n      renderer.render(fluidScene, cam);\n      renderer.render(scene, cam);\n      [rt0, rt1] = [rt1, rt0];\n    });\n\n    return () => {\n      renderer.setAnimationLoop(null);\n      clearInterval(timer);\n      ref.current?.removeEventListener('pointermove', onMove);\n      ro.disconnect();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ref.current?.removeChild(renderer.domElement);\n      renderer.dispose();\n      rt0.dispose();\n      rt1.dispose();\n      quadMat.dispose();\n      quad.geometry.dispose();\n      labelMat.dispose();\n      label.geometry.dispose();\n    };\n  }, [\n    text,\n    fontFamily,\n    fontWeight,\n    noiseFactor,\n    noiseScale,\n    rgbPersistFactor,\n    alphaPersistFactor,\n    animateColor,\n    startColor,\n    textColor,\n    backgroundColor,\n    colorCycleInterval,\n    supersample\n  ]);\n\n  return <div ref={ref} className=\"w-full h-full\" />;\n};\n\nexport default TextTrail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}